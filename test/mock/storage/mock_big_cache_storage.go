// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/jiachen/Git/mgcache/storage/bigcache_storage.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBigCacheInterface is a mock of BigCacheInterface interface.
type MockBigCacheInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBigCacheInterfaceMockRecorder
}

// MockBigCacheInterfaceMockRecorder is the mock recorder for MockBigCacheInterface.
type MockBigCacheInterfaceMockRecorder struct {
	mock *MockBigCacheInterface
}

// NewMockBigCacheInterface creates a new mock instance.
func NewMockBigCacheInterface(ctrl *gomock.Controller) *MockBigCacheInterface {
	mock := &MockBigCacheInterface{ctrl: ctrl}
	mock.recorder = &MockBigCacheInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBigCacheInterface) EXPECT() *MockBigCacheInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockBigCacheInterface) Delete(key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockBigCacheInterfaceMockRecorder) Delete(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockBigCacheInterface)(nil).Delete), key)
}

// Get mocks base method.
func (m *MockBigCacheInterface) Get(key string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockBigCacheInterfaceMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBigCacheInterface)(nil).Get), key)
}

// Set mocks base method.
func (m *MockBigCacheInterface) Set(key string, entry []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", key, entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockBigCacheInterfaceMockRecorder) Set(key, entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockBigCacheInterface)(nil).Set), key, entry)
}
